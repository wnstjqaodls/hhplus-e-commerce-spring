spring:
  application:
    name: hhplus
  profiles:
    active: local
  datasource:
    name: HangHaePlusDataSource
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 50          # 3 → 50 증가 (성능 개선)
      minimum-idle: 10               # 최소 유휴 커넥션
      connection-timeout: 20000      # 10초 → 20초 증가
      idle-timeout: 300000           # 5분 유휴 타임아웃
      max-lifetime: 1200000          # 20분 최대 수명
      leak-detection-threshold: 60000 # 1분 누수 감지
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    open-in-view: false
    generate-ddl: false
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate.timezone.default_storage: NORMALIZE_UTC
      hibernate.jdbc.time_zone: UTC

---
spring.config.activate.on-profile: local, test




spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hhplus?serverTimezone=UTC&characterEncoding=UTF-8
    username: application
    password: application
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      port: ${REDIS_PORT:6379}
      host: ${REDIS_HOST:localhost}
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: hhplus-consumer-group
      # 해당 컨슈머 그룹의 오프셋 정보가 없을경우 맨 앞(offstet 0)부터 읽도록 설정
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # 카프카는 데이터를 바이트 배열로 전송해야 하므로 직렬화가 필요.
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
    database-platform: org.hibernate.dialect.MySQLDialect
  devtools:
    restart:
      enabled: true                    # 재시작 활성화
      additional-paths: src/main/java  # 감시할 경로
      exclude: static/**,public/**     # 제외할 경로
    livereload:
      enabled: true                    # 브라우저 자동 새로고침
      port: 35729
    remote:
      secret: mysecret                 # 원격 DevTools용 (선택사항)

server:
  port: 8080

# Actuator and Metrics configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.9,0.95,0.99
      slo:
        http.server.requests: 100ms,200ms,500ms,1s,2s

logging:
  level:
    ecommerce: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
